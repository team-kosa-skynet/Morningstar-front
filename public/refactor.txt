 1. 코드 중복 제거 (높은 우선순위)

  - 레벨 아이콘 로직 중복: CommunityList.tsx와 다른 컴포넌트들에서 getLevelIcon 함수가 중복됨.
  levelUtils.ts에 이미 있는 유틸리티 함수 활용 필요
  - 소셜 로그인 중복: Login.tsx와 SignUp.tsx에서 구글/카카오 로그인 코드가 중복됨
  - 폼 검증 로직: 여러 컴포넌트에서 이메일/비밀번호 검증 로직이 반복됨

  2. 컴포넌트 분리 필요 (높은 우선순위)

  큰 컴포넌트들을 작은 단위로 분리 필요:
  - CommunityList.tsx (265줄): 검색박스, 포스트 아이템, 포스트 리스트로 분리
  - SignUp.tsx (291줄): 검증 규칙, 소셜 로그인 버튼, 폼 입력 컴포넌트로 분리
  - AIChat.tsx (243줄): 모델 선택기, 모델 상세 모달로 분리

  3. 타입 정의 개선 (중간 우선순위)

  - any 타입 사용 제거 (apiService.ts에 여러 곳)
  - 인터페이스들을 src/types/ 폴더로 중앙화
  - API 응답 타입 통합 관리

  4. 공통 컴포넌트 추출 (중간 우선순위)

  - FormInput: 재사용 가능한 폼 입력 컴포넌트
  - ValidationMessage: 검증 메시지 표시 컴포넌트
  - SocialLoginButtons: 소셜 로그인 버튼 그룹
  - LoadingSpinner: 로딩 상태 표시 컴포넌트

  5. 커스텀 훅 생성 (중간 우선순위)

  - useFormValidation: 폼 검증 로직
  - useApi: API 호출 및 로딩/에러 처리
  - useSocialLogin: 소셜 로그인 처리

  6. 코드 품질 개선 (낮은 우선순위)

  - console.log 제거 (48개 발견됨)
  - 인라인 스타일 제거 (App.tsx:78-85)
  - 에러 처리 일관성 개선
  - 하드코딩된 URL들을 환경변수로 이동

  7. API 서비스 리팩토링

  - apiService.ts (726줄)를 도메인별로 분리
    - authService.ts: 인증 관련
    - boardService.ts: 게시판 관련
    - memberService.ts: 회원 관련
    - pointService.ts: 포인트 관련

  8. 스타일링 일관성

  - SCSS 모듈 사용 패턴 통일
  - 공통 변수 활용도 개선
  - 반응형 디자인 패턴 통일
