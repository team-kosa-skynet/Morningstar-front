
0 정보 입력
면접 시작하기를 누르면

displayName
:
"사용자"
documentId
:
null
jobRole
:
"FRONTEND"

를 보내면서


1. 세션 생성.

리스폰스로

{
    "code": 200,
    "message": "면접 세션이 성공적으로 시작되었습니다.",
    "data": {
        "sessionId": "82724f3d-20b5-4f50-83d1-751d5d86fbbd",
        "greeting": "사용자님, 안녕하세요. 이번 면접을 진행할 면접관입니다. 만나서 반갑습니다. 질문을 시작하겠습니다.",
        "firstQuestion": "팀 프로젝트에서 갈등이 발생했을 때, 이를 어떻게 해결했는지 구체적인 사례를 통해 설명해 주세요.",
        "questionIntent": "이 질문은 지원자가 팀 내에서 발생한 갈등을 어떻게 해결했는지를 통해 문제 해결 능력, 리더십, 협업 능력을 평가하려는 의도를 가지고 있습니다.",
        "answerGuides": [
            "갈등이 발생한 상황을 명확히 설명하고, 그로 인해 팀의 목표에 어떤 영향을 미쳤는지 구체적으로 보여주세요.",
            "자신의 역할을 분명히 하고, 갈등 해결을 위해 어떤 조치를 취했는지 단계별로 설명하세요.",
            "해결 과정에서 사용한 커뮤니케이션 방법이나 도구에 대해 구체적으로 언급하고, 그 효과를 설명하세요.",
            "결과적으로 팀이 어떤 성과를 달성했는지 수치나 구체적인 사례를 통해 강조하세요.",
            "이 경험을 통해 무엇을 배웠는지, 앞으로 어떻게 적용할 것인지에 대해 구체적으로 설명하세요."
        ],
        "totalQuestions": 10,
        "currentIndex": 0,
        "tts": {
            "format": "mp3",
            "base64": "//OEx

를 받음.

그러면 사용자에게 질문을 읽어주고
사용자는 그 질문에 대한 답변을 녹음.
그리고 텍스트로 변환된걸 백엔드로 전송
여기서 퀘스쳔 인덱스는 위에 리스폰스 값의 커렌트 인덱스 값임.

curl --location 'http://localhost:8080/api/interview/turn?withAudio=true' \
--data '{
    "sessionId": "90a8d430-c899-4464-afeb-5ae174f117da",
    "questionIndex": 0,
    "transcript": "안녕하세요. 저는 3년차 백엔드 개발자입니다..."
}'


2. 다음 질문 시작

리스폰스 값으로

{
  "nextQuestion": "데이터베이스 쿼리 성능을 최적화하기 위해 어떤 전략을 사용했는지, 구체적인 예를 들어 설명해 주세요.",
  "questionIntent": "이 질문은 후보자가 데이터베이스 쿼리 성능 최적화에 대한 기술적 이해와 실제 경험을 평가하고, 문제 해결 접근 방식을 통해 기술적 깊이를 확인하기 위한 것입니다.",
  "answerGuides": [
    "상황을 설명할 때, 특정 데이터베이스와 쿼리의 종류를 명시하고, 성능 문제의 배경을 간략히 설명합니다.",
    "문제 해결 과정에서 사용한 구체적인 전략(예: 인덱스 추가, 쿼리 리팩토링, 캐싱 전략 등)을 단계별로 설명합니다.",
    "결과를 제시할 때, 성능 개선의 수치적 결과(예: 쿼리 실행 시간 단축, 서버 부하 감소 등)를 포함하여 비즈니스에 미친 영향을 강조합니다.",
    "기술 선택의 이유와 그에 따른 트레이드오프를 설명하여, 의사결정 과정의 깊이를 보여줍니다.",
    "실제 경험을 바탕으로 한 사례를 통해, 이론적 지식뿐만 아니라 실무적 노하우를 강조합니다."
  ],
  "coachingTips": "사례를 좀 더 구체적으로 설명하고, 충돌 해결 과정에서의 의사결정과정 및 대안 분석을 추가하면 좋겠습니다.",
  "scoreDelta": {
    "clarity": 60,
    "tech_depth": 50,
    "structure_STAR": 50,
    "tradeoff": 40,
    "root_cause": 40
  },
  "currentIndex": 1,
  "done": false,
  "tts": {
    "format": "mp3",
    "base64": "//OExA

  이런 값을 받는데, 2번째 질문 시작 전에
  coachingTips << 이게 저번에 답했던 사용자의 답변에 대한 코칭 팁임.
  그렇기때문에 모달창으로 Tip! 사례를 좀 더 구체적으로 설명하고, 충돌 해결 과정에서의 의사결정과정 및 대안 분석을 추가하면 좋겠습니다.
  이런식으로 사용자에게 먼저 안내를 해준 뒤 사용자가 모달창을 닫으면
  지금 리스폰스로 받아온 질문과 그에 대한 의도, 답변 가이드를 화면에 띄워준다. 음성 실행도 모달창이 닫기면 읽어줘야함.
  이런식으로 진행되고 처음 세션에서 시작할 때 "totalQuestions": 10,
  받아온 값으로 봤을 때 지금은 총 질문수가 10개니깐 10번의 질문이 끝날떄까지 반복해서 진행.

  마지막 면접 질문이 끝나면

  curl --location 'http://localhost:8080/api/interview/report/finalize' \
  --data '{
      "sessionId": "22e2a3fd-1c1c-4bdf-b0a1-95998eaad5e4"
  }'

  를 호출해서

  3. 리포트 생성

  {
    "overallScore": 12,
    "subscores": {
      "clarity": 30,
      "tech_depth": 30,
      "structure_STAR": 0,
      "tradeoff": 0,
      "root_cause": 0
    },
    "strengths": "기본적인 전문성을 바탕으로 명확한 기술적 이해도는 확인되었으나, 강점을 찾기 어려운 상태입니다. 전체적인 답변의 질이 낮아 기본기 부족으로 평가됩니다.",
    "areasToImprove": "구조적인 답변이 부족하고 갈등 상황의 해결 과정에 대한 구체성이 결여되었습니다. 의사결정 시 장단점 분석도 부족하여 문제가 더 확대될 수 있습니다.",
    "nextSteps": "기초적인 STAR 방식 및 팀 내 갈등 해결 사례에 대해 학습하고 연습하세요. 실제 사례를 기반으로 경험을 정리하여 답변을 준비하는 것이 필요합니다."
  }

  리포트를 사용자에게 보여주면 면접 종료.



  이런식으로 로직이 구성되어있는지 확인한번 해주고
  만약 현재 없는 모달창을 만들어야 될 수도 있는데, 디자인은 나중에 새로 해서 수정할거니깐 지금은 그냥
  간단한 흰 모달창에 텍스트만 출력하는걸로 간단하게만 만들어줘 필요하면.

